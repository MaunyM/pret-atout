
service: apollo-lambda # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
custom:
  webpack:
    includeModules: true
  serverless-offline:
    port: 4000
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: Bills
            sources: [seed-data/Bills.json]
          - table: Games
            sources: [seed-data/Games.json]
          - table: Ludos
            sources: [seed-data/Ludos.json]

functions:
  authorize:
    handler: backend/authorize.handler
  graphql:
    handler: handler.graphqlHandler
    role: ServiceRole
    events:
      - http:
          path: graphql
          method: post
          cors: true
          authorizer: authorize
  graphiql:
    handler: handler.graphiql
    role: ServiceRole
    events:
      - http:
          path: graphiql
          method: get
  hello:
    handler: handler.hello

resources:
  Resources:
    BillTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          -
            AttributeName: handle
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: handle
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Bills'
    GameTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          -
            AttributeName: handle
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: handle
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Games'
    LudoTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: handle
            KeyType: HASH
          - AttributeName: target
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: handle
            AttributeType: S
          - AttributeName: target
            AttributeType: S
          - AttributeName: edge
            AttributeType: S
          - AttributeName: search
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Ludos'
        GlobalSecondaryIndexes:
          - IndexName: target-index
            KeySchema:
              - AttributeName: target
                KeyType: HASH
              - AttributeName: edge
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: search-index
            KeySchema:
              - AttributeName: search
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    ServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "DynamoRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          -
            PolicyName: "Dynamo-ServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - "arn:aws:dynamodb:eu-west-1:*:table/Bills"
                    - "arn:aws:dynamodb:eu-west-1:*:table/Bills/*"
                    - "arn:aws:dynamodb:eu-west-1:*:table/Games"
                    - "arn:aws:dynamodb:eu-west-1:*:table/Games/*"
                    - "arn:aws:dynamodb:eu-west-1:*:table/Ludos"
                    - "arn:aws:dynamodb:eu-west-1:*:table/Ludos/*"
    XrayLambdaRolePolicy:
      Type: "AWS::IAM::Policy"
      Properties:
        PolicyName: "xray-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action:
                - "xray:PutTraceSegments"
                - "xray:PutTelemetryRecords"
              Resource:
                - "*"
        Roles:
          - Ref: ServiceRole